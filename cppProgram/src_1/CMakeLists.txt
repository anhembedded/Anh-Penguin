# Danh s√°ch c√°c target b·∫°n mu·ªën Cppcheck ph√¢n t√≠ch
set(TARGETS_TO_ANALYZE
    src_1_mainProcess
    src_1_printName
)

add_executable(src_1_mainProcess src_1_mainProcess.cpp)
add_executable(src_1_printName src_1_printName.cpp)

# üéØ CH·ªåN TARGET B·∫†N MU·ªêN XEM ·ªû ƒê√ÇY
set(TARGET_TO_DEBUG src_1_mainProcess)

# B·∫Øt ƒë·∫ßu in th√¥ng tin
message(STATUS "========================================================================")
message(STATUS "üñ®Ô∏è  ƒêang in m√¥i tr∆∞·ªùng c·ªßa target: ${TARGET_TO_DEBUG}")
message(STATUS "========================================================================")

# 1. In ra chu·∫©n C++
get_target_property(CXX_STANDARD ${TARGET_TO_DEBUG} CXX_STANDARD)
if(CXX_STANDARD)
    message(STATUS ">> Chu·∫©n C++ (ƒë·ªÉ t·∫°o c·ªù --std=c++XX):")
    message(STATUS "   ${CXX_STANDARD}")
endif()

# 2. In ra c√°c file ngu·ªìn (ƒë∆∞·ªùng d·∫´n tuy·ªát ƒë·ªëi)
message(STATUS "\n>> C√°c file m√£ ngu·ªìn (ƒë·ªÉ truy·ªÅn v√†o cu·ªëi l·ªánh):")
get_target_property(SOURCES ${TARGET_TO_DEBUG} SOURCES)
foreach(ITEM ${SOURCES})
    get_filename_component(ABSOLUTE_PATH ${ITEM} ABSOLUTE)
    message(STATUS "   ${ABSOLUTE_PATH}")
endforeach()

# 3. In ra c√°c ƒë∆∞·ªùng d·∫´n include c·ªßa D·ª∞ √ÅN
message(STATUS "\n>> C√°c ƒë∆∞·ªùng d·∫´n include c·ªßa D·ª∞ √ÅN (ƒë·ªÉ t·∫°o c·ªù -I):")
get_target_property(PROJECT_INCLUDES ${TARGET_TO_DEBUG} INCLUDE_DIRECTORIES)
if(PROJECT_INCLUDES AND NOT "${PROJECT_INCLUDES}" STREQUAL "PROJECT_INCLUDES-NOTFOUND")
    foreach(ITEM ${PROJECT_INCLUDES})
        message(STATUS "   -I${ITEM}")
    endforeach()
else()
    message(STATUS "   (Kh√¥ng c√≥)")
endif()

# 4. In ra c√°c ƒë∆∞·ªùng d·∫´n include c·ªßa H·ªÜ TH·ªêNG
message(STATUS "\n>> C√°c ƒë∆∞·ªùng d·∫´n include c·ªßa H·ªÜ TH·ªêNG (ƒë·ªÉ t·∫°o c·ªù -I):")
set(SYSTEM_INCLUDES ${CMAKE_CXX_IMPLICIT_INCLUDE_DIRECTORIES})
foreach(ITEM ${SYSTEM_INCLUDES})
    message(STATUS "   -I${ITEM}")
endforeach()

# 5. In ra c√°c ƒë·ªãnh nghƒ©a preprocessor
message(STATUS "\n>> C√°c ƒë·ªãnh nghƒ©a preprocessor (ƒë·ªÉ t·∫°o c·ªù -D):")
get_target_property(DEFINES ${TARGET_TO_DEBUG} COMPILE_DEFINITIONS)
if(DEFINES AND NOT "${DEFINES}" STREQUAL "DEFINES-NOTFOUND")
    foreach(ITEM ${DEFINES})
        message(STATUS "   -D${ITEM}")
    endforeach()
else()
    message(STATUS "   (Kh√¥ng c√≥)")
endif()

message(STATUS "========================================================================")
message(STATUS "üí° G·ª£i √Ω: Copy c√°c ƒë∆∞·ªùng d·∫´n v√† file ·ªü tr√™n ƒë·ªÉ t·∫°o l·ªánh cppcheck th·ªß c√¥ng.")
message(STATUS "========================================================================")
